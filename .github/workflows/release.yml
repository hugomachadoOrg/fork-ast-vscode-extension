name: VSCode Release

on:
  workflow_call:
    inputs:
      jsTag:
        description: 'JS Wrapper tag name'
        required: false
        type: string
        default: nightly
      vscodeTag:
        description: 'Tag name (ignored if not dev build)'
        required: false
        type: string
      dev:
        description: 'Is dev build'
        required: false
        default: true
        type: boolean
  workflow_dispatch:
    inputs:
      jsTag:
        description: 'JSW tag name (ignored if not dev build)'
        required: false
      vscodeTag:
        description: 'Tag name (ignored if not dev build)'
        required: false
      dev:
        description: 'Is dev build'
        required: false
        default: true
        type: boolean

jobs:
  delete:
    uses: hugomachadoOrg/fork-ast-vscode-extension/.github/workflows/delete-dev-releases.yml@main
    with:
      tag: ${{ inputs.jsTag }}
    secrets: inherit
    if: inputs.dev == true
  release:
    runs-on: ubuntu-latest
    steps:

      # CHECKOUT PROJECT
      - name: Checkout
        uses: actions/checkout@v3.5.2

      # GIT CONFIGURATION
      - run: |
          git config user.name vscode-releases
          git config user.email vscode-releases@github.com

      # AUTHENTICATE TO GITHUB PACKAGE REGISTRY
      - name: Authenticate with GitHub package registry
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc

      # SETUP NODE
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Get JS Wrapper nightly release
        if: inputs.dev == true && inputs.jsTag != ''
        run: |
          echo "Getting js nightly version..."

          JS_VERSION_NAME=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/orgs/CheckmarxDev/packages/npm/ast-cli-javascript-wrapper/versions | jq '.[]|select(.name | contains("-${{inputs.jsTag}}.0"))|.name')
          
          echo "Nightly version = " ${JS_VERSION_NAME}
          
          echo "JS_VERSION_NAME=${JS_VERSION_NAME}" >> $GITHUB_ENV
          
      # GET TAG NAME
      - name: Generate Tag name
        run: |
          if [ ${{ inputs.dev }} == true ]; then
            echo "TAG_NAME=$(npm version prerelease --preid=${{ inputs.jsTag }} --no-git-tag-version --allow-same-version)" >> $GITHUB_ENV
          else
            echo "TAG_NAME=$(npm version patch)" >> $GITHUB_ENV
          fi
        
      - name: Install dependencies
        run: npm install
        
      - name: Install js wrapper nightly version
        if: github.event_name == 'push' && env.JS_VERSION_NAME != ''
        run: |
          npm install @checkmarxdev/ast-cli-javascript-wrapper@${{env.JS_VERSION_NAME}}
          
          npm list
          

      - name: Install VSCE
        run: npm install -g vsce

      - name: Package .vsix file
        run: |
          if [ ${{ inputs.dev }} == true ]; then
            vsce package --pre-release
          else
            vsce package
          fi
          
          TAG_NAME=${{env.TAG_NAME}}
          echo TAG NAME = ${TAG_NAME}
          echo "VSIX_TAG_NAME=${TAG_NAME:1}" >> $GITHUB_ENV
        
      # PUSH TAGS IF IT IS A RELEASE
      - name: Push tag if release
        if: inputs.dev == false
        run: git push && git push --tags
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{env.TAG_NAME}}
          generate_release_notes: true
          files: fork-ast-results-${{env.VSIX_TAG_NAME}}.vsix
          prerelease: ${{ inputs.dev }}
      
      #- name: Publish
      #  env:
      #    MARKET_TOKEN: ${{ secrets.MARKET_TOKEN }}
      #  if: env.MARKET_TOKEN != null
      #  run: vsce publish -p ${{ env.MARKET_TOKEN }}
